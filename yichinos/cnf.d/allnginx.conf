# ユーザーとグループを指定
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# イベントモジュールの設定
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # 複数のサーバーブロックを含むことができる
    server {
        listen       80 default_server;
        server_name  _;

        # エラーページの設定
        error_page   500 502 503 504  /50x.html;

        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # ルートディレクトリの設定とデフォルトファイル
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # クライアントボディサイズの制限
        client_max_body_size 8m;

        # CGIスクリプトの設定 (例: PHP)
        location ~ \.php$ {
            root           /usr/share/nginx/html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # アップロードを扱うエンドポイント
        location /upload {
            root    /usr/share/nginx/html;
            client_body_temp_path /var/nginx/upload;
            dav_methods PUT DELETE MKCOL COPY MOVE;
            create_full_put_path  on;
            dav_access user:rw group:rw all:r;
        }

        # メソッド制限 (GET, POST, DELETEのみを許可)
        location /api {
            limit_except GET POST DELETE {
                deny all;
            }
        }

        # HTTPリダイレクト (301 Moved Permanently)
        location /oldpage {
            rewrite ^(/oldpage)$ http://$server_name/newpage permanent;
        }

        # 複数のポートリスニング
        listen 8080;
        listen 8888;
    }
}

# (その他のサーバーブロックや設定がここに続く可能性があります)
